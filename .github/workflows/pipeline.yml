name: Aniflix Pipeline

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build-client:
    name: Build Aniflix Client
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          version: latest

      - name: Install Bun version manager
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: build project
        run: cd client && bun install --frozen-lockfile && bun run build

  build-server:
    name: Build Aniflix Server
    runs-on: ubuntu-latest
    env:
      SEGMENT_DOWNLOAD_TIMEOUT_MINS: '5'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          version: latest

      - name: Set up JDK 17 Temurin
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
          cache-dependency-path: | # optional
            server/*.gradle*
            server/**/gradle-wrapper.properties

      - name: Build with Gradle
        run: cd server && ./gradlew clean build --no-daemon --stacktrace

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/aniflix/server_snapshot:latest
