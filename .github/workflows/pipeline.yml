name: Aniflix Pipeline

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]
  release:
    types: [ published ]

jobs:
  build-client:
    name: Build Aniflix Client
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    env:
      REGISTRY_URL: ${{ (github.ref == 'refs/heads/develop') && secrets.CLIENT_SNAPSHOT_REPO || secrets.CLIENT_RELEASE_REPO }}
      SERVER_BASE_URL: ${{ (github.ref == 'refs/heads/develop') && secrets.VITE_SERVER_TST_BASE_URL || secrets.VITE_SERVER_BASE_URL }}
      ENVIRONMENT: ${{ (github.ref == 'refs/heads/develop') && 'development' || 'production' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          version: latest

      - name: Docker Build & Push Action
        uses: mr-smithers-excellent/docker-build-push@v6.4
        with:
          image: ${{ env.REGISTRY_URL }}
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          buildArgs: VITE_SERVER_BASE_URL=${{ env.SERVER_BASE_URL }},VITE_SERVER_ISSUER=${{ env.SERVER_BASE_URL }},VITE_ENV=${{ env.ENVIRONMENT }},VITE_PORT=${{ secrets.VITE_PORT }}

          addLatest: true
          directory: ./client
          dockerfile: ./client/Dockerfile

          multiPlatform: true
          platform: linux/amd64,linux/arm64

  build-server:
    name: Build Aniflix Server
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    env:
      REGISTRY_URL: ${{ (github.ref == 'refs/heads/develop') && secrets.SERVER_SNAPSHOT_REPO || secrets.SERVER_RELEASE_REPO }}
      SEGMENT_DOWNLOAD_TIMEOUT_MINS: '5'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          version: latest

      - name: Set up JDK 17 Temurin
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
          cache-dependency-path: | # optional
            server/*.gradle*
            server/**/gradle-wrapper.properties

      - name: Build with Gradle
        run: ./gradlew clean build --no-daemon --stacktrace

      - name: Docker Build & Push Action
        uses: mr-smithers-excellent/docker-build-push@v6.4
        with:
          image: ${{ env.REGISTRY_URL }}
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

          addLatest: true
          directory: ./server
          dockerfile: ./server/Dockerfile

          multiPlatform: true
          platform: linux/amd64,linux/arm64
